{"version":3,"sources":["components/QuoteContainer.js","App.js","index.js"],"names":["QuoteContainer","useState","randomQuote","setRandomQuote","id","Quote","Speaker","onClick","e","preventDefault","axios","get","then","res","console","log","data","quotesArray","quote","Math","floor","random","length","getRandomQuote","catch","err","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAwDeA,EApDQ,WAEnB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAgCA,OACI,sBAAKC,GAAG,YAAR,UACI,wDACA,6BAAYA,GAAG,OAAf,UAGI,0CAHJ,OAIKF,QAJL,IAIKA,OAJL,EAIKA,EAAaG,MAJlB,IAIyB,6CAEzB,qBAAKD,GAAG,UAAR,gBAAmBF,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAaI,UAEhC,wBAAQC,QAzBS,SAACC,GACtBA,EAAEC,iBAEFC,IACKC,IAAI,qCACJC,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAAIG,MArBL,SAACC,GAEpB,IAIIC,EAAQD,EAJIE,KAAKC,MACjBD,KAAKE,SAAWF,KAAKC,MAAMH,EAAYK,UAM3CnB,EAAee,GAaPK,CAAeV,EAAIG,SAEtBQ,OAAM,SAACC,GACJX,QAAQC,IAAIU,OAemBrB,GAAG,iBAAtC,8BC/BGsB,EAZH,WACR,OACI,8BACI,cAAC,EAAD,OCJZC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.b39cc023.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n// import { Button } from \"react-bootstrap\";\r\n\r\nconst QuoteContainer = () => {\r\n    // const [currentQuote, setCurrentQuote] = useState({});\r\n    const [randomQuote, setRandomQuote] = useState({});\r\n\r\n    // needed a separate function to randomize the quotes\r\n    const getRandomQuote = (quotesArray) => {\r\n        // Get a random number, between 0 and the length of the quotesArray\r\n        let randomNum = Math.floor(\r\n            Math.random() * Math.floor(quotesArray.length)\r\n        );\r\n        // Use that random number as the quotesArray index, to grab a random quote.\r\n        let quote = quotesArray[randomNum];\r\n\r\n        //returning one single quote\r\n        setRandomQuote(quote);\r\n\r\n        //if statement can be here if data is not prsent to return a message\r\n    };\r\n\r\n    //this function does the click to GET the quotes\r\n    const handleQuoteClick = (e) => {\r\n        e.preventDefault();\r\n\r\n        axios\r\n            .get(\"http://localhost:7000/api/quotes/\")\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                getRandomQuote(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div id=\"quote-box\">\r\n            <h2>Encouragment For Today</h2>\r\n            <blockquote id=\"text\">\r\n                {/* {randomQuote.Quote} {randomQuote.Speaker} */}\r\n                {/* OR use chain operator which checks if the key exists benefit: is that if the key does not exist that my computer won't crash*/}\r\n                <span>&ldquo;</span>\r\n                {randomQuote?.Quote} <span>&rdquo;</span>\r\n            </blockquote>\r\n            <div id=\"speaker\">{randomQuote?.Speaker}</div>\r\n            {/* {randomQuote?.time} ----- this will not work but the page will not show an error but if if you look in the console it shows the keys that available*/}\r\n            <button onClick={handleQuoteClick} id=\"randomQuoteBtn\">\r\n                Encourage Me\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuoteContainer;\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n// import { Router } from \"@reach/router\";\nimport QuoteContainer from \"./components/QuoteContainer\";\n\nconst App = () => {\n    return (\n        <div>\n            <QuoteContainer />\n        </div>\n        // <Router className=\"App\">\n        //     hello\n        //\n        // </Router>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}